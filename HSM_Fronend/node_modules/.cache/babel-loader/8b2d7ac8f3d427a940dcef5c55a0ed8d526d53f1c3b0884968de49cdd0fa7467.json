{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n\n  // Fetch appointments from the backend API\n  const fetchAppointments = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/appointments');\n      setAppointments(response.data);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n\n  // Fetch appointments when the component mounts\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  const handleCancelAppointment = async id => {\n    try {\n      await axios.patch(`http://127.0.0.1:5000/appointments/${id}`, {\n        status: 'Cancelled'\n      });\n      fetchAppointments(); // Refresh the appointments after cancellation\n    } catch (error) {\n      console.error('Error canceling appointment:', error);\n    }\n  };\n  const handleSubmitNote = async (id, newNote) => {\n    try {\n      await axios.patch(`http://127.0.0.1:5000/appointments/${id}`, {\n        note: newNote\n      });\n      fetchAppointments(); // Refresh the appointments after submitting a note\n    } catch (error) {\n      console.error('Error submitting note:', error);\n    }\n  };\n  const handleBookAppointment = async newAppointment => {\n    try {\n      await axios.post('http://127.0.0.1:5000/appointments', newAppointment);\n      fetchAppointments(); // Refresh the appointments after booking a new one\n    } catch (error) {\n      console.error('Error booking appointment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DoctorDashboard","PatientDashboard","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","fetchAppointments","response","get","data","error","console","handleCancelAppointment","id","patch","status","handleSubmitNote","newNote","note","handleBookAppointment","newAppointment","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","appointment","isDoctor","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n\n    // Fetch appointments from the backend API\n    const fetchAppointments = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:5000/appointments');\n            setAppointments(response.data);\n        } catch (error) {\n            console.error('Error fetching appointments:', error);\n        }\n    };\n\n    // Fetch appointments when the component mounts\n    useEffect(() => {\n        fetchAppointments();\n    }, []);\n\n    const handleCancelAppointment = async (id) => {\n        try {\n            await axios.patch(`http://127.0.0.1:5000/appointments/${id}`, { status: 'Cancelled' });\n            fetchAppointments(); // Refresh the appointments after cancellation\n        } catch (error) {\n            console.error('Error canceling appointment:', error);\n        }\n    };\n\n    const handleSubmitNote = async (id, newNote) => {\n        try {\n            await axios.patch(`http://127.0.0.1:5000/appointments/${id}`, { note: newNote });\n            fetchAppointments(); // Refresh the appointments after submitting a note\n        } catch (error) {\n            console.error('Error submitting note:', error);\n        }\n    };\n\n    const handleBookAppointment = async (newAppointment) => {\n        try {\n            await axios.post('http://127.0.0.1:5000/appointments', newAppointment);\n            fetchAppointments(); // Refresh the appointments after booking a new one\n        } catch (error) {\n            console.error('Error booking appointment:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            <DoctorDashboard\n                appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n            />\n\n            <PatientDashboard\n                appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n                onBookAppointment={handleBookAppointment}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}