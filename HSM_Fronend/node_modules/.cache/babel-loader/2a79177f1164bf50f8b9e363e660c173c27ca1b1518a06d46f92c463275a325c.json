{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport AdminDashboard from './components/AdminDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userRole, setUserRole] = useState(null); // Can be 'doctor', 'patient', or 'admin'\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    doctorName: 'Dr. John Doe',\n    date: '2024-10-15',\n    status: 'Scheduled',\n    notes: [{\n      author: 'Patient',\n      text: 'Initial complaint: headache'\n    }],\n    isDoctor: true\n  }, {\n    id: 2,\n    doctorName: 'Dr. Jane Smith',\n    date: '2024-10-17',\n    status: 'Scheduled',\n    notes: [],\n    isDoctor: true\n  }]);\n  const handleCancelAppointment = id => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      status: 'Cancelled'\n    } : appointment));\n  };\n  const handleSubmitNote = (id, newNote) => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      notes: [...appointment.notes, newNote]\n    } : appointment));\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments([...appointments, {\n      id: newId,\n      doctorName: 'Dr. Jane Smith',\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }],\n      isDoctor: false\n    }]);\n  };\n\n  // Handle login form submission\n  const handleLogin = role => {\n    setUserRole(role);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), !userRole && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('doctor'),\n        children: \"Login as Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('patient'),\n        children: \"Login as Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('admin'),\n        children: \"Login as Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), userRole === 'doctor' && /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), userRole === 'patient' && /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"w/UvMw1StZsKrLGvwBRDI2Pn8AU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DoctorDashboard","PatientDashboard","AdminDashboard","jsxDEV","_jsxDEV","App","_s","userRole","setUserRole","appointments","setAppointments","id","doctorName","date","status","notes","author","text","isDoctor","handleCancelAppointment","map","appointment","handleSubmitNote","newNote","handleBookAppointment","newAppointment","newId","length","note","handleLogin","role","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport AdminDashboard from './components/AdminDashboard';\n\nconst App = () => {\n    const [userRole, setUserRole] = useState(null); // Can be 'doctor', 'patient', or 'admin'\n    const [appointments, setAppointments] = useState([\n        {\n            id: 1,\n            doctorName: 'Dr. John Doe',\n            date: '2024-10-15',\n            status: 'Scheduled',\n            notes: [{ author: 'Patient', text: 'Initial complaint: headache' }],\n            isDoctor: true,\n        },\n        {\n            id: 2,\n            doctorName: 'Dr. Jane Smith',\n            date: '2024-10-17',\n            status: 'Scheduled',\n            notes: [],\n            isDoctor: true,\n        },\n    ]);\n\n    const handleCancelAppointment = (id) => {\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n            )\n        );\n    };\n\n    const handleSubmitNote = (id, newNote) => {\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id\n                    ? { ...appointment, notes: [...appointment.notes, newNote] }\n                    : appointment\n            )\n        );\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments([\n            ...appointments,\n            {\n                id: newId,\n                doctorName: 'Dr. Jane Smith',\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n                isDoctor: false,\n            },\n        ]);\n    };\n\n    // Handle login form submission\n    const handleLogin = (role) => {\n        setUserRole(role);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            {/* If no user is logged in, show the login form */}\n            {!userRole && (\n                <div className=\"login\">\n                    <h2>Login</h2>\n                    <button onClick={() => handleLogin('doctor')}>Login as Doctor</button>\n                    <button onClick={() => handleLogin('patient')}>Login as Patient</button>\n                    <button onClick={() => handleLogin('admin')}>Login as Admin</button>\n                </div>\n            )}\n\n            {/* Conditionally render dashboards based on the logged-in user */}\n            {userRole === 'doctor' && (\n                <DoctorDashboard\n                    appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                    onCancel={handleCancelAppointment}\n                    onSubmitNote={handleSubmitNote}\n                />\n            )}\n\n            {userRole === 'patient' && (\n                <PatientDashboard\n                    appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                    onCancel={handleCancelAppointment}\n                    onSubmitNote={handleSubmitNote}\n                    onBookAppointment={handleBookAppointment}\n                />\n            )}\n\n            {userRole === 'admin' && <AdminDashboard />}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}