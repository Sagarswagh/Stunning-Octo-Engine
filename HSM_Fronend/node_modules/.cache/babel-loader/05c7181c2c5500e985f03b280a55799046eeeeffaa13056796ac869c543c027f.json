{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppointmentCard from './AppointmentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    patientName: 'John Doe',\n    status: 'Scheduled',\n    note: ''\n  }, {\n    id: 2,\n    patientName: 'Jane Smith',\n    status: 'Scheduled',\n    note: ''\n  }]);\n  const handleCancel = id => {\n    setAppointments(prevAppointments => prevAppointments.map(appt => appt.id === id ? {\n      ...appt,\n      status: 'Cancelled'\n    } : appt));\n  };\n  const handleNoteChange = (id, newNote) => {\n    setAppointments(prevAppointments => prevAppointments.map(appt => appt.id === id ? {\n      ...appt,\n      note: newNote\n    } : appt));\n  };\n  const handleNoteSubmit = id => {\n    alert(`Note for appointment ${id} submitted.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), appointments.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentCard, {\n      appointment: appointment,\n      onCancel: handleCancel,\n      onNoteChange: handleNoteChange,\n      onNoteSubmit: handleNoteSubmit\n    }, appointment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDashboard, \"04NuEV7E8Vf5DCXIDrZkPBRxpSQ=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","AppointmentCard","jsxDEV","_jsxDEV","DoctorDashboard","_s","appointments","setAppointments","id","patientName","status","note","handleCancel","prevAppointments","map","appt","handleNoteChange","newNote","handleNoteSubmit","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","appointment","onCancel","onNoteChange","onNoteSubmit","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/DoctorDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AppointmentCard from './AppointmentCard';\n\nconst DoctorDashboard = () => {\n    const [appointments, setAppointments] = useState([\n        { id: 1, patientName: 'John Doe', status: 'Scheduled', note: '' },\n        { id: 2, patientName: 'Jane Smith', status: 'Scheduled', note: '' },\n    ]);\n\n    const handleCancel = (id) => {\n        setAppointments(prevAppointments =>\n            prevAppointments.map(appt => \n                appt.id === id ? { ...appt, status: 'Cancelled' } : appt\n            )\n        );\n    };\n\n    const handleNoteChange = (id, newNote) => {\n        setAppointments(prevAppointments =>\n            prevAppointments.map(appt => \n                appt.id === id ? { ...appt, note: newNote } : appt\n            )\n        );\n    };\n\n    const handleNoteSubmit = (id) => {\n        alert(`Note for appointment ${id} submitted.`);\n    };\n\n    return (\n        <div>\n            <h1>Doctor Dashboard</h1>\n            {appointments.map((appointment) => (\n                <AppointmentCard \n                    key={appointment.id} \n                    appointment={appointment} \n                    onCancel={handleCancel} \n                    onNoteChange={handleNoteChange}\n                    onNoteSubmit={handleNoteSubmit}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default DoctorDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAC7C;IAAEQ,EAAE,EAAE,CAAC;IAAEC,WAAW,EAAE,UAAU;IAAEC,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAG,CAAC,EACjE;IAAEH,EAAE,EAAE,CAAC;IAAEC,WAAW,EAAE,YAAY;IAAEC,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAG,CAAC,CACtE,CAAC;EAEF,MAAMC,YAAY,GAAIJ,EAAE,IAAK;IACzBD,eAAe,CAACM,gBAAgB,IAC5BA,gBAAgB,CAACC,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEL,MAAM,EAAE;IAAY,CAAC,GAAGK,IACxD,CACJ,CAAC;EACL,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACR,EAAE,EAAES,OAAO,KAAK;IACtCV,eAAe,CAACM,gBAAgB,IAC5BA,gBAAgB,CAACC,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEJ,IAAI,EAAEM;IAAQ,CAAC,GAAGF,IAClD,CACJ,CAAC;EACL,CAAC;EAED,MAAMG,gBAAgB,GAAIV,EAAE,IAAK;IAC7BW,KAAK,CAAC,wBAAwBX,EAAE,aAAa,CAAC;EAClD,CAAC;EAED,oBACIL,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBlB,YAAY,CAACQ,GAAG,CAAEW,WAAW,iBAC1BtB,OAAA,CAACF,eAAe;MAEZwB,WAAW,EAAEA,WAAY;MACzBC,QAAQ,EAAEd,YAAa;MACvBe,YAAY,EAAEX,gBAAiB;MAC/BY,YAAY,EAAEV;IAAiB,GAJ1BO,WAAW,CAACjB,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKtB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAxCID,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}