{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppointmentCard from './AppointmentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientDashboard = () => {\n  _s();\n  const [appointments, setAppointments] = useState([\n  // Sample appointments data (replace with actual data later)\n  {\n    id: 1,\n    doctorName: 'Dr. Smith',\n    date: '2024-10-20',\n    status: 'Scheduled',\n    note: ''\n  }, {\n    id: 2,\n    doctorName: 'Dr. Alice',\n    date: '2024-10-22',\n    status: 'Scheduled',\n    note: ''\n  }]);\n  const [newAppointmentDate, setNewAppointmentDate] = useState('');\n  const [newAppointmentNote, setNewAppointmentNote] = useState('');\n  const handleCancel = id => {\n    setAppointments(appointments.filter(appointment => appointment.id !== id));\n  };\n  const handleSubmitNote = (id, note) => {\n    const updatedAppointments = appointments.map(appointment => {\n      if (appointment.id === id) {\n        return {\n          ...appointment,\n          note\n        };\n      }\n      return appointment;\n    });\n    setAppointments(updatedAppointments);\n  };\n  const handleBookAppointment = () => {\n    const newAppointment = {\n      id: appointments.length + 1,\n      doctorName: 'Dr. New Doctor',\n      date: newAppointmentDate,\n      status: 'Scheduled',\n      note: newAppointmentNote\n    };\n    setAppointments([...appointments, newAppointment]);\n    setNewAppointmentDate('');\n    setNewAppointmentNote('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments-list\",\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentCard, {\n        appointment: appointment,\n        onCancel: handleCancel,\n        onSubmitNote: handleSubmitNote\n      }, appointment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Book a New Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: newAppointmentDate,\n      onChange: e => setNewAppointmentDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a note\",\n      value: newAppointmentNote,\n      onChange: e => setNewAppointmentNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookAppointment,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientDashboard, \"XN43idz6GgNKb/h5zlZfuPrcemQ=\");\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useState","AppointmentCard","jsxDEV","_jsxDEV","PatientDashboard","_s","appointments","setAppointments","id","doctorName","date","status","note","newAppointmentDate","setNewAppointmentDate","newAppointmentNote","setNewAppointmentNote","handleCancel","filter","appointment","handleSubmitNote","updatedAppointments","map","handleBookAppointment","newAppointment","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCancel","onSubmitNote","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AppointmentCard from './AppointmentCard';\n\nconst PatientDashboard = () => {\n    const [appointments, setAppointments] = useState([\n        // Sample appointments data (replace with actual data later)\n        { id: 1, doctorName: 'Dr. Smith', date: '2024-10-20', status: 'Scheduled', note: '' },\n        { id: 2, doctorName: 'Dr. Alice', date: '2024-10-22', status: 'Scheduled', note: '' },\n    ]);\n\n    const [newAppointmentDate, setNewAppointmentDate] = useState('');\n    const [newAppointmentNote, setNewAppointmentNote] = useState('');\n\n    const handleCancel = (id) => {\n        setAppointments(appointments.filter(appointment => appointment.id !== id));\n    };\n\n    const handleSubmitNote = (id, note) => {\n        const updatedAppointments = appointments.map(appointment => {\n            if (appointment.id === id) {\n                return { ...appointment, note };\n            }\n            return appointment;\n        });\n        setAppointments(updatedAppointments);\n    };\n\n    const handleBookAppointment = () => {\n        const newAppointment = {\n            id: appointments.length + 1,\n            doctorName: 'Dr. New Doctor',\n            date: newAppointmentDate,\n            status: 'Scheduled',\n            note: newAppointmentNote\n        };\n        setAppointments([...appointments, newAppointment]);\n        setNewAppointmentDate('');\n        setNewAppointmentNote('');\n    };\n\n    return (\n        <div className=\"patient-dashboard\">\n            <h2>Your Appointments</h2>\n            <div className=\"appointments-list\">\n                {appointments.map(appointment => (\n                    <AppointmentCard\n                        key={appointment.id}\n                        appointment={appointment}\n                        onCancel={handleCancel}\n                        onSubmitNote={handleSubmitNote}\n                    />\n                ))}\n            </div>\n\n            <h3>Book a New Appointment</h3>\n            <input\n                type=\"date\"\n                value={newAppointmentDate}\n                onChange={(e) => setNewAppointmentDate(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Add a note\"\n                value={newAppointmentNote}\n                onChange={(e) => setNewAppointmentNote(e.target.value)}\n            />\n            <button onClick={handleBookAppointment}>Book Appointment</button>\n        </div>\n    );\n};\n\nexport default PatientDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC;EAC7C;EACA;IAAEQ,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,WAAW;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAG,CAAC,EACrF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,WAAW;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAG,CAAC,CACxF,CAAC;EAEF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMiB,YAAY,GAAIT,EAAE,IAAK;IACzBD,eAAe,CAACD,YAAY,CAACY,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACX,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMY,gBAAgB,GAAGA,CAACZ,EAAE,EAAEI,IAAI,KAAK;IACnC,MAAMS,mBAAmB,GAAGf,YAAY,CAACgB,GAAG,CAACH,WAAW,IAAI;MACxD,IAAIA,WAAW,CAACX,EAAE,KAAKA,EAAE,EAAE;QACvB,OAAO;UAAE,GAAGW,WAAW;UAAEP;QAAK,CAAC;MACnC;MACA,OAAOO,WAAW;IACtB,CAAC,CAAC;IACFZ,eAAe,CAACc,mBAAmB,CAAC;EACxC,CAAC;EAED,MAAME,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMC,cAAc,GAAG;MACnBhB,EAAE,EAAEF,YAAY,CAACmB,MAAM,GAAG,CAAC;MAC3BhB,UAAU,EAAE,gBAAgB;MAC5BC,IAAI,EAAEG,kBAAkB;MACxBF,MAAM,EAAE,WAAW;MACnBC,IAAI,EAAEG;IACV,CAAC;IACDR,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEkB,cAAc,CAAC,CAAC;IAClDV,qBAAqB,CAAC,EAAE,CAAC;IACzBE,qBAAqB,CAAC,EAAE,CAAC;EAC7B,CAAC;EAED,oBACIb,OAAA;IAAKuB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B5B,OAAA;MAAKuB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC7BrB,YAAY,CAACgB,GAAG,CAACH,WAAW,iBACzBhB,OAAA,CAACF,eAAe;QAEZkB,WAAW,EAAEA,WAAY;QACzBa,QAAQ,EAAEf,YAAa;QACvBgB,YAAY,EAAEb;MAAiB,GAH1BD,WAAW,CAACX,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAItB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAEN5B,OAAA;MAAAwB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B5B,OAAA;MACI+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,kBAAmB;MAC1BuB,QAAQ,EAAGC,CAAC,IAAKvB,qBAAqB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACF5B,OAAA;MACI+B,IAAI,EAAC,MAAM;MACXK,WAAW,EAAC,YAAY;MACxBJ,KAAK,EAAEpB,kBAAmB;MAC1BqB,QAAQ,EAAGC,CAAC,IAAKrB,qBAAqB,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACF5B,OAAA;MAAQqC,OAAO,EAAEjB,qBAAsB;MAAAI,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAlEID,gBAAgB;AAAAqC,EAAA,GAAhBrC,gBAAgB;AAoEtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}