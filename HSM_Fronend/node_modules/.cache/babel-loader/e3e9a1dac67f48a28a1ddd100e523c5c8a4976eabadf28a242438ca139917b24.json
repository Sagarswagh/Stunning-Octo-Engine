{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [userType, setUserType] = useState('patient'); // Default to 'patient'\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false); // Track sign-up vs login\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isSignUp ? 'http://127.0.0.1:5000/signup' : 'http://127.0.0.1:5000/login';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          user_type: userType === 'patient' ? 'patient' : 'doctor'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to authenticate');\n      }\n      const data = await response.json();\n      onLogin(data.message, userType); // Call onLogin prop function with message and userType\n\n      // Reset form fields\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      console.error('Error during authentication:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"patient\",\n            checked: userType === 'patient',\n            onChange: () => setUserType('patient')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), \"Patient\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"doctor\",\n            checked: userType === 'doctor',\n            onChange: () => setUserType('doctor')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), \"Doctor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isSignUp ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSignUp(!isSignUp),\n        children: isSignUp ? 'Already have an account? Login' : \"Don't have an account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"ldFFLATMunmB9lu6SVlYVZsdtjA=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","userType","setUserType","username","setUsername","password","setPassword","isSignUp","setIsSignUp","handleSubmit","e","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","user_type","ok","Error","data","json","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","checked","onChange","placeholder","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst LoginPage = ({ onLogin }) => {\n    const [userType, setUserType] = useState('patient'); // Default to 'patient'\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isSignUp, setIsSignUp] = useState(false); // Track sign-up vs login\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const url = isSignUp ? 'http://127.0.0.1:5000/signup' : 'http://127.0.0.1:5000/login';\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    user_type: userType === 'patient' ? 'patient' : 'doctor',\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to authenticate');\n            }\n\n            const data = await response.json();\n            onLogin(data.message, userType); // Call onLogin prop function with message and userType\n\n            // Reset form fields\n            setUsername('');\n            setPassword('');\n        } catch (error) {\n            console.error('Error during authentication:', error);\n        }\n    };\n\n    return (\n        <div className=\"login-page\">\n            <h1>Hospital Management System</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            value=\"patient\"\n                            checked={userType === 'patient'}\n                            onChange={() => setUserType('patient')}\n                        />\n                        Patient\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            value=\"doctor\"\n                            checked={userType === 'doctor'}\n                            onChange={() => setUserType('doctor')}\n                        />\n                        Doctor\n                    </label>\n                </div>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">{isSignUp ? 'Sign Up' : 'Login'}</button>\n                <button type=\"button\" onClick={() => setIsSignUp(!isSignUp)}>\n                    {isSignUp ? 'Already have an account? Login' : \"Don't have an account? Sign Up\"}\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}