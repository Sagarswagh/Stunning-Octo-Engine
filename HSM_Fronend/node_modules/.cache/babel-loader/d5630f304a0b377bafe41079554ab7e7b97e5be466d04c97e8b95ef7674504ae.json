{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/appointments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        // Update appointments with fetched data\n        setAppointments(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  const handleCancelAppointment = id => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      status: 'Cancelled'\n    } : appointment));\n  };\n  const handleSubmitNote = (id, newNote) => {\n    console.log(id, newNote);\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      notes: [...appointment.notes, newNote]\n    } : appointment));\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments([...appointments, {\n      id: newId,\n      doctor_name: 'Dr. Jane Smith',\n      // Adjust to match your data structure\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }],\n      isDoctor: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DoctorDashboard","PatientDashboard","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","fetchAppointments","response","fetch","ok","Error","data","json","console","log","error","handleCancelAppointment","id","map","appointment","status","handleSubmitNote","newNote","notes","handleBookAppointment","newAppointment","newId","length","doctor_name","date","author","text","note","isDoctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n    \n    useEffect(() => {\n        const fetchAppointments = async () => {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/appointments');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                // Update appointments with fetched data\n                setAppointments(data);\n                console.log(data);\n            } catch (error) {\n                console.error('Error fetching appointments:', error);\n            }\n        };\n\n        fetchAppointments();\n    }, []);\n\n    const handleCancelAppointment = (id) => {\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n            )\n        );\n    };\n\n    const handleSubmitNote = (id, newNote) => {\n        console.log(id, newNote);\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id\n                    ? { ...appointment, notes: [...appointment.notes, newNote] }\n                    : appointment\n            )\n            \n        );\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments([\n            ...appointments,\n            {\n                id: newId,\n                doctor_name: 'Dr. Jane Smith', // Adjust to match your data structure\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n                isDoctor: false,\n            },\n        ]);\n    };\n\n    return (\n        \n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            <DoctorDashboard\n                appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n            />\n\n            <PatientDashboard\n                appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n                onBookAppointment={handleBookAppointment}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}