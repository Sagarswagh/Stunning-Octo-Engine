{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport LoginPage from './components/LoginPage';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [userType, setUserType] = useState(null);\n  useEffect(() => {\n    const storedUserType = localStorage.getItem('userType');\n    if (storedUserType) {\n      setUserType(storedUserType);\n    }\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/appointments');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n  const handleLogin = type => {\n    setUserType(type);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('username');\n    localStorage.removeItem('userType');\n    setUserType(null);\n  };\n  const handleCancelAppointment = async id => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to cancel appointment');\n      }\n      const data = await response.json();\n      if (data.success) {\n        // Re-fetch the latest appointments after a successful cancellation\n        await fetchAppointments();\n      } else {\n        console.error('Error cancelling appointment:', data.message);\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  const handleSubmitNote = async (id, newNote) => {\n    const author = userType === 'doctor' ? 'Doctor' : 'Patient';\n    try {\n      await axios.post(`http://127.0.0.1:5000/appointments/${id}/add-note`, {\n        note: newNote.text,\n        author: author\n      });\n      setAppointments(prevAppointments => prevAppointments.map(appointment => appointment.id === id ? {\n        ...appointment,\n        notes: [...appointment.notes, {\n          author: author,\n          text: newNote.text\n        }]\n      } : appointment));\n      return true;\n    } catch (error) {\n      console.error('Error submitting note:', error);\n      return false;\n    }\n  };\n  const handleBookAppointment = async () => {\n    try {\n      await fetchAppointments();\n    } catch (error) {\n      console.error('Error fetching appointments after booking:', error);\n    }\n  };\n  if (!userType) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  }\n  const filteredAppointments = userType === 'patient' ? appointments.filter(appointment => appointment.patient_name === localStorage.getItem('username')) : appointments;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hospital Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), userType === 'doctor' ? /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: filteredAppointments,\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: filteredAppointments,\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"zQcYWi9pEHSP7I9Oj7ANVEoB9S4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DoctorDashboard","PatientDashboard","LoginPage","axios","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","userType","setUserType","storedUserType","localStorage","getItem","fetchAppointments","response","fetch","ok","Error","data","json","error","console","handleLogin","type","handleLogout","removeItem","handleCancelAppointment","id","method","headers","success","message","handleSubmitNote","newNote","author","post","note","text","prevAppointments","map","appointment","notes","handleBookAppointment","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","filteredAppointments","filter","patient_name","className","children","onClick","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport LoginPage from './components/LoginPage';\nimport axios from 'axios';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n    const [userType, setUserType] = useState(null);\n\n    useEffect(() => {\n        const storedUserType = localStorage.getItem('userType');\n        if (storedUserType) {\n            setUserType(storedUserType);\n        }\n\n        fetchAppointments();\n    }, []);\n\n    const fetchAppointments = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:5000/appointments');\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setAppointments(data);\n        } catch (error) {\n            console.error('Error fetching appointments:', error);\n        }\n    };\n\n    const handleLogin = (type) => {\n        setUserType(type);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('username');\n        localStorage.removeItem('userType');\n        setUserType(null);\n    };\n\n    const handleCancelAppointment = async (id) => {\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to cancel appointment');\n            }\n\n            const data = await response.json();\n\n            if (data.success) {\n                // Re-fetch the latest appointments after a successful cancellation\n                await fetchAppointments();\n            } else {\n                console.error('Error cancelling appointment:', data.message);\n            }\n        } catch (error) {\n            console.error('Error cancelling appointment:', error);\n        }\n    };\n\n    const handleSubmitNote = async (id, newNote) => {\n        const author = userType === 'doctor' ? 'Doctor' : 'Patient';\n        try {\n            await axios.post(`http://127.0.0.1:5000/appointments/${id}/add-note`, {\n                note: newNote.text,\n                author: author\n            });\n\n            setAppointments((prevAppointments) =>\n                prevAppointments.map((appointment) =>\n                    appointment.id === id\n                        ? {\n                            ...appointment,\n                            notes: [...appointment.notes, { author: author, text: newNote.text }]\n                        }\n                        : appointment\n                )\n            );\n            return true;\n        } catch (error) {\n            console.error('Error submitting note:', error);\n            return false;\n        }\n    };\n\n    const handleBookAppointment = async () => {\n        try {\n            await fetchAppointments();\n        } catch (error) {\n            console.error('Error fetching appointments after booking:', error);\n        }\n    };\n\n    if (!userType) {\n        return <LoginPage onLogin={handleLogin} />;\n    }\n\n    const filteredAppointments =\n        userType === 'patient'\n            ? appointments.filter((appointment) => appointment.patient_name === localStorage.getItem('username'))\n            : appointments;\n\n    return (\n        <div className=\"App\">\n            <div className=\"header\">\n                <h1>Hospital Management System</h1>\n                <div className=\"logout-container\">\n                    <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\n                </div>\n            </div>\n\n            {userType === 'doctor' ? (\n                <DoctorDashboard\n                    appointments={filteredAppointments}\n                    onCancel={handleCancelAppointment}\n                    onSubmitNote={handleSubmitNote}\n                />\n            ) : (\n                <PatientDashboard\n                    appointments={filteredAppointments}\n                    onCancel={handleCancelAppointment}\n                    onSubmitNote={handleSubmitNote}\n                    onBookAppointment={handleBookAppointment}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}