{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [doctorName, setDoctorName] = useState('');\n  const [patientName, setPatientName] = useState('');\n  const [date, setDate] = useState('');\n\n  // Fetch appointments from the API\n  const fetchAppointments = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/appointments');\n      if (!response.ok) {\n        throw new Error('Failed to fetch appointments');\n      }\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Add a new appointment\n  const addAppointment = async () => {\n    const newAppointment = {\n      doctor_name: doctorName,\n      patient_name: patientName,\n      date\n    };\n    try {\n      const response = await fetch('http://localhost:5000/appointments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newAppointment)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create appointment');\n      }\n      fetchAppointments(); // Refresh the appointments list after adding\n      clearForm(); // Clear form after submission\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Update appointment status\n  const updateAppointment = async (id, status) => {\n    try {\n      const response = await fetch(`http://localhost:5000/appointments/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update appointment');\n      }\n      fetchAppointments(); // Refresh the appointments list after updating\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Clear form fields\n  const clearForm = () => {\n    setDoctorName('');\n    setPatientName('');\n    setDate('');\n  };\n  useEffect(() => {\n    fetchAppointments(); // Fetch appointments on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Doctor Name\",\n      value: doctorName,\n      onChange: e => setDoctorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Patient Name\",\n      value: patientName,\n      onChange: e => setPatientName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Date (YYYY-MM-DD)\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addAppointment,\n      children: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: appointment.doctor_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), \" - \", appointment.patient_name, \" - \", appointment.date, \" - \", appointment.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateAppointment(appointment.id, 'Completed'),\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, appointment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sQtiS8lMG/rYWf7EfEMheXqiarw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","doctorName","setDoctorName","patientName","setPatientName","date","setDate","fetchAppointments","response","fetch","ok","Error","data","json","error","console","addAppointment","newAppointment","doctor_name","patient_name","method","headers","body","JSON","stringify","clearForm","updateAppointment","id","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","appointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [appointments, setAppointments] = useState([]);\n  const [doctorName, setDoctorName] = useState('');\n  const [patientName, setPatientName] = useState('');\n  const [date, setDate] = useState('');\n\n  // Fetch appointments from the API\n  const fetchAppointments = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/appointments');\n      if (!response.ok) {\n        throw new Error('Failed to fetch appointments');\n      }\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Add a new appointment\n  const addAppointment = async () => {\n    const newAppointment = { doctor_name: doctorName, patient_name: patientName, date };\n    try {\n      const response = await fetch('http://localhost:5000/appointments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newAppointment),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create appointment');\n      }\n      fetchAppointments(); // Refresh the appointments list after adding\n      clearForm(); // Clear form after submission\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Update appointment status\n  const updateAppointment = async (id, status) => {\n    try {\n      const response = await fetch(`http://localhost:5000/appointments/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update appointment');\n      }\n      fetchAppointments(); // Refresh the appointments list after updating\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Clear form fields\n  const clearForm = () => {\n    setDoctorName('');\n    setPatientName('');\n    setDate('');\n  };\n\n  useEffect(() => {\n    fetchAppointments(); // Fetch appointments on component mount\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Hospital Management System</h1>\n\n      <h2>Add Appointment</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Doctor Name\"\n        value={doctorName}\n        onChange={(e) => setDoctorName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Patient Name\"\n        value={patientName}\n        onChange={(e) => setPatientName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Date (YYYY-MM-DD)\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)}\n      />\n      <button onClick={addAppointment}>Add Appointment</button>\n\n      <h2>Appointments</h2>\n      <ul>\n        {appointments.map((appointment) => (\n          <li key={appointment.id}>\n            <strong>{appointment.doctor_name}</strong> - {appointment.patient_name} - {appointment.date} - {appointment.status}\n            <button onClick={() => updateAppointment(appointment.id, 'Completed')}>Mark as Completed</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}