{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PatientDashboard from './PatientDashboard';\n\n// Sample data for appointments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialAppointments = [{\n  id: 1,\n  doctorName: 'Dr. John Doe',\n  date: '2024-10-12',\n  status: 'Upcoming',\n  notes: [{\n    text: 'Bring previous reports',\n    author: 'Doctor'\n  }],\n  isDoctor: false // Determines if the user is a doctor or patient\n}];\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState(initialAppointments);\n  const handleCancelAppointment = id => {\n    setAppointments(appointments.filter(appointment => appointment.id !== id));\n  };\n  const handleSubmitNote = (id, newNote) => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      notes: [...appointment.notes, newNote]\n    } : appointment));\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    const appointment = {\n      id: newId,\n      doctorName: 'Dr. New Doctor',\n      date: newAppointment.date,\n      status: 'Upcoming',\n      notes: [{\n        text: newAppointment.note,\n        author: 'Patient'\n      }],\n      isDoctor: false\n    };\n    setAppointments([...appointments, appointment]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments,\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"9xEOOh3Dy7FckPhlJNVPcgB/Ca0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PatientDashboard","jsxDEV","_jsxDEV","initialAppointments","id","doctorName","date","status","notes","text","author","isDoctor","App","_s","appointments","setAppointments","handleCancelAppointment","filter","appointment","handleSubmitNote","newNote","map","handleBookAppointment","newAppointment","newId","length","note","children","fileName","_jsxFileName","lineNumber","columnNumber","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PatientDashboard from './PatientDashboard';\n\n// Sample data for appointments\nconst initialAppointments = [\n    {\n        id: 1,\n        doctorName: 'Dr. John Doe',\n        date: '2024-10-12',\n        status: 'Upcoming',\n        notes: [\n            { text: 'Bring previous reports', author: 'Doctor' }\n        ],\n        isDoctor: false // Determines if the user is a doctor or patient\n    }\n];\n\nconst App = () => {\n    const [appointments, setAppointments] = useState(initialAppointments);\n\n    const handleCancelAppointment = (id) => {\n        setAppointments(appointments.filter(appointment => appointment.id !== id));\n    };\n\n    const handleSubmitNote = (id, newNote) => {\n        setAppointments(\n            appointments.map(appointment =>\n                appointment.id === id\n                    ? { ...appointment, notes: [...appointment.notes, newNote] }\n                    : appointment\n            )\n        );\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        const appointment = {\n            id: newId,\n            doctorName: 'Dr. New Doctor',\n            date: newAppointment.date,\n            status: 'Upcoming',\n            notes: [{ text: newAppointment.note, author: 'Patient' }],\n            isDoctor: false\n        };\n        setAppointments([...appointments, appointment]);\n    };\n\n    return (\n        <div>\n            <h1>Hospital Management System</h1>\n            <PatientDashboard\n                appointments={appointments}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n                onBookAppointment={handleBookAppointment}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAG,CACxB;EACIC,EAAE,EAAE,CAAC;EACLC,UAAU,EAAE,cAAc;EAC1BC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,UAAU;EAClBC,KAAK,EAAE,CACH;IAAEC,IAAI,EAAE,wBAAwB;IAAEC,MAAM,EAAE;EAAS,CAAC,CACvD;EACDC,QAAQ,EAAE,KAAK,CAAC;AACpB,CAAC,CACJ;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAACI,mBAAmB,CAAC;EAErE,MAAMa,uBAAuB,GAAIZ,EAAE,IAAK;IACpCW,eAAe,CAACD,YAAY,CAACG,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACd,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMe,gBAAgB,GAAGA,CAACf,EAAE,EAAEgB,OAAO,KAAK;IACtCL,eAAe,CACXD,YAAY,CAACO,GAAG,CAACH,WAAW,IACxBA,WAAW,CAACd,EAAE,KAAKA,EAAE,GACf;MAAE,GAAGc,WAAW;MAAEV,KAAK,EAAE,CAAC,GAAGU,WAAW,CAACV,KAAK,EAAEY,OAAO;IAAE,CAAC,GAC1DF,WACV,CACJ,CAAC;EACL,CAAC;EAED,MAAMI,qBAAqB,GAAIC,cAAc,IAAK;IAC9C,MAAMC,KAAK,GAAGV,YAAY,CAACW,MAAM,GAAG,CAAC;IACrC,MAAMP,WAAW,GAAG;MAChBd,EAAE,EAAEoB,KAAK;MACTnB,UAAU,EAAE,gBAAgB;MAC5BC,IAAI,EAAEiB,cAAc,CAACjB,IAAI;MACzBC,MAAM,EAAE,UAAU;MAClBC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAEc,cAAc,CAACG,IAAI;QAAEhB,MAAM,EAAE;MAAU,CAAC,CAAC;MACzDC,QAAQ,EAAE;IACd,CAAC;IACDI,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEI,WAAW,CAAC,CAAC;EACnD,CAAC;EAED,oBACIhB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC7B,OAAA,CAACF,gBAAgB;MACbc,YAAY,EAAEA,YAAa;MAC3BkB,QAAQ,EAAEhB,uBAAwB;MAClCiB,YAAY,EAAEd,gBAAiB;MAC/Be,iBAAiB,EAAEZ;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}