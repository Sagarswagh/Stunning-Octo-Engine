{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/appointments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        // Update appointments with fetched data\n        setAppointments(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  const handleCancelAppointment = id => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      status: 'Cancelled'\n    } : appointment));\n  };\n  const handleSubmitNote = async (id, newNote) => {\n    console.log(id, newNote);\n    try {\n      // Make a POST request to add the note\n      const response = await axios.post(`http://127.0.0.1:5000/appointments/${id}/add-note`, {\n        note: newNote\n      });\n      if (response.status === 200) {\n        // Update the local state to reflect the new note\n        setAppointments(prevAppointments => prevAppointments.map(appointment => appointment.id === id ? {\n          ...appointment,\n          notes: [...appointment.notes, {\n            author: 'author_name',\n            text: newNote\n          }]\n        } : appointment));\n        console.log(\"Note added successfully\");\n      }\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments([...appointments, {\n      id: newId,\n      doctor_name: 'Dr. Jane Smith',\n      // Adjust to match your data structure\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }],\n      isDoctor: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DoctorDashboard","PatientDashboard","axios","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","fetchAppointments","response","fetch","ok","Error","data","json","console","log","error","handleCancelAppointment","id","map","appointment","status","handleSubmitNote","newNote","post","note","prevAppointments","notes","author","text","handleBookAppointment","newAppointment","newId","length","doctor_name","date","isDoctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport axios from 'axios';\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n    \n    useEffect(() => {\n        const fetchAppointments = async () => {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/appointments');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                // Update appointments with fetched data\n                setAppointments(data);\n                console.log(data);\n            } catch (error) {\n                console.error('Error fetching appointments:', error);\n            }\n        };\n\n        fetchAppointments();\n    }, []);\n\n    const handleCancelAppointment = (id) => {\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n            )\n        );\n    };\n\n    const handleSubmitNote = async (id, newNote) => {\n        console.log(id, newNote);\n    \n        try {\n            // Make a POST request to add the note\n            const response = await axios.post(`http://127.0.0.1:5000/appointments/${id}/add-note`, {\n                note: newNote,\n            });\n    \n            if (response.status === 200) {\n                // Update the local state to reflect the new note\n                setAppointments((prevAppointments) =>\n                    prevAppointments.map((appointment) =>\n                        appointment.id === id\n                            ? { ...appointment, notes: [...appointment.notes, { author: 'author_name', text: newNote }] }\n                            : appointment\n                    )\n                );\n    \n                console.log(\"Note added successfully\");\n            }\n        } catch (error) {\n            console.error('Error adding note:', error);\n        }\n    };\n    \n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments([\n            ...appointments,\n            {\n                id: newId,\n                doctor_name: 'Dr. Jane Smith', // Adjust to match your data structure\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n                isDoctor: false,\n            },\n        ]);\n    };\n\n    return (\n        \n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            <DoctorDashboard\n                appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n            />\n\n            <PatientDashboard\n                appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n                onBookAppointment={handleBookAppointment}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}