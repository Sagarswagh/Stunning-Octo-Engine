{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport UserTypeSelection from './components/UserTypeSelection';\nimport Login from './components/Login';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [userType, setUserType] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUserType, setCurrentUserType] = useState(null);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/appointments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAppointments(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  const handleUserTypeSelection = type => {\n    setUserType(type);\n  };\n  const handleAuthenticate = (isAuthenticated, userType) => {\n    setIsAuthenticated(isAuthenticated);\n    setCurrentUserType(userType);\n  };\n  const handleCancelAppointment = async id => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to cancel appointment');\n      }\n      const data = await response.json();\n      if (data.success) {\n        setAppointments(appointments.map(appointment => appointment.id === id ? {\n          ...appointment,\n          status: 'Cancelled'\n        } : appointment));\n      } else {\n        console.error('Error cancelling appointment:', data.message);\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  const handleSubmitNote = async (id, newNote) => {\n    console.log(id, newNote);\n    // Logic for submitting note\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments([...appointments, {\n      id: newId,\n      doctor_name: 'Dr. Jane Smith',\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }],\n      isDoctor: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hospital Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(UserTypeSelection, {\n            onSelectUserType: handleUserTypeSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: userType ? /*#__PURE__*/_jsxDEV(Login, {\n            userType: userType,\n            onAuthenticate: handleAuthenticate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctor-dashboard\",\n          children: isAuthenticated && currentUserType === 'doctor' ? /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n            appointments: appointments.filter(appointment => appointment.isDoctor),\n            onCancel: handleCancelAppointment,\n            onSubmitNote: handleSubmitNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient-dashboard\",\n          children: isAuthenticated && currentUserType === 'patient' ? /*#__PURE__*/_jsxDEV(PatientDashboard, {\n            appointments: appointments.filter(appointment => !appointment.isDoctor),\n            onCancel: handleCancelAppointment,\n            onSubmitNote: handleSubmitNote,\n            onBook: handleBookAppointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"QbjWXLDcxRt4T+rqRuiThI4odFs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Redirect","DoctorDashboard","PatientDashboard","UserTypeSelection","Login","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","userType","setUserType","isAuthenticated","setIsAuthenticated","currentUserType","setCurrentUserType","fetchAppointments","response","fetch","ok","Error","data","json","console","log","error","handleUserTypeSelection","type","handleAuthenticate","handleCancelAppointment","id","method","headers","success","map","appointment","status","message","handleSubmitNote","newNote","handleBookAppointment","newAppointment","newId","length","doctor_name","date","notes","author","text","note","isDoctor","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","onSelectUserType","onAuthenticate","to","filter","onCancel","onSubmitNote","onBook","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport UserTypeSelection from './components/UserTypeSelection';\nimport Login from './components/Login';\nimport './styles/App.css';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n    const [userType, setUserType] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [currentUserType, setCurrentUserType] = useState(null);\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/appointments');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setAppointments(data);\n                console.log(data);\n            } catch (error) {\n                console.error('Error fetching appointments:', error);\n            }\n        };\n\n        fetchAppointments();\n    }, []);\n\n    const handleUserTypeSelection = (type) => {\n        setUserType(type);\n    };\n\n    const handleAuthenticate = (isAuthenticated, userType) => {\n        setIsAuthenticated(isAuthenticated);\n        setCurrentUserType(userType);\n    };\n\n    const handleCancelAppointment = async (id) => {\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to cancel appointment');\n            }\n\n            const data = await response.json();\n\n            if (data.success) {\n                setAppointments(\n                    appointments.map((appointment) =>\n                        appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n                    )\n                );\n            } else {\n                console.error('Error cancelling appointment:', data.message);\n            }\n        } catch (error) {\n            console.error('Error cancelling appointment:', error);\n        }\n    };\n\n    const handleSubmitNote = async (id, newNote) => {\n        console.log(id, newNote);\n        // Logic for submitting note\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments([\n            ...appointments,\n            {\n                id: newId,\n                doctor_name: 'Dr. Jane Smith',\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n                isDoctor: false,\n            },\n        ]);\n    };\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <h1>Hospital Management System</h1>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <UserTypeSelection onSelectUserType={handleUserTypeSelection} />\n                    </Route>\n                    <Route path=\"/login\">\n                        {userType ? (\n                            <Login userType={userType} onAuthenticate={handleAuthenticate} />\n                        ) : (\n                            <Redirect to=\"/\" />\n                        )}\n                    </Route>\n                    <Route path=\"/doctor-dashboard\">\n                        {isAuthenticated && currentUserType === 'doctor' ? (\n                            <DoctorDashboard\n                                appointments={appointments.filter(appointment => appointment.isDoctor)}\n                                onCancel={handleCancelAppointment}\n                                onSubmitNote={handleSubmitNote}\n                            />\n                        ) : (\n                            <Redirect to=\"/\" />\n                        )}\n                    </Route>\n                    <Route path=\"/patient-dashboard\">\n                        {isAuthenticated && currentUserType === 'patient' ? (\n                            <PatientDashboard\n                                appointments={appointments.filter(appointment => !appointment.isDoctor)}\n                                onCancel={handleCancelAppointment}\n                                onSubmitNote={handleSubmitNote}\n                                onBook={handleBookAppointment}\n                            />\n                        ) : (\n                            <Redirect to=\"/\" />\n                        )}\n                    </Route>\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}