{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport AdminPage from './pages/AdminPage';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userRole, setUserRole] = useState('patient'); // Change this value to 'doctor', 'patient', or 'admin'\n\n  // Sample data for appointments\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    doctorName: 'Dr. John Doe',\n    date: '2024-10-15',\n    status: 'Scheduled',\n    notes: [{\n      author: 'Patient',\n      text: 'Initial complaint: headache'\n    }],\n    isDoctor: true\n  }, {\n    id: 2,\n    doctorName: 'Dr. Jane Smith',\n    date: '2024-10-17',\n    status: 'Scheduled',\n    notes: [],\n    isDoctor: true\n  }]);\n  const handleCancelAppointment = id => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      status: 'Cancelled'\n    } : appointment));\n  };\n  const handleSubmitNote = (id, newNote) => {\n    setAppointments(appointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      notes: [...appointment.notes, newNote]\n    } : appointment));\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments([...appointments, {\n      id: newId,\n      doctorName: 'Dr. Jane Smith',\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }],\n      isDoctor: false\n    }]);\n  };\n\n  // Conditional rendering based on user role\n  const renderDashboard = () => {\n    switch (userRole) {\n      case 'doctor':\n        return /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n          appointments: appointments.filter(appointment => appointment.isDoctor),\n          onCancel: handleCancelAppointment,\n          onSubmitNote: handleSubmitNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this);\n      case 'patient':\n        return /*#__PURE__*/_jsxDEV(PatientDashboard, {\n          appointments: appointments.filter(appointment => !appointment.isDoctor),\n          onCancel: handleCancelAppointment,\n          onSubmitNote: handleSubmitNote,\n          onBookAppointment: handleBookAppointment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this);\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a valid user role.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roleSelect\",\n        children: \"Select User Role: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"roleSelect\",\n        value: userRole,\n        onChange: e => setUserRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"doctor\",\n          children: \"Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"patient\",\n          children: \"Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), renderDashboard()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"slG/0Pu2ZVdlwdDueLeJNW26Cc0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DoctorDashboard","PatientDashboard","AdminPage","jsxDEV","_jsxDEV","App","_s","userRole","setUserRole","appointments","setAppointments","id","doctorName","date","status","notes","author","text","isDoctor","handleCancelAppointment","map","appointment","handleSubmitNote","newNote","handleBookAppointment","newAppointment","newId","length","note","renderDashboard","filter","onCancel","onSubmitNote","fileName","_jsxFileName","lineNumber","columnNumber","onBookAppointment","children","className","htmlFor","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport AdminPage from './pages/AdminPage';\nimport './styles/App.css';\n\nconst App = () => {\n    const [userRole, setUserRole] = useState('patient'); // Change this value to 'doctor', 'patient', or 'admin'\n\n    // Sample data for appointments\n    const [appointments, setAppointments] = useState([\n        {\n            id: 1,\n            doctorName: 'Dr. John Doe',\n            date: '2024-10-15',\n            status: 'Scheduled',\n            notes: [{ author: 'Patient', text: 'Initial complaint: headache' }],\n            isDoctor: true,\n        },\n        {\n            id: 2,\n            doctorName: 'Dr. Jane Smith',\n            date: '2024-10-17',\n            status: 'Scheduled',\n            notes: [],\n            isDoctor: true,\n        },\n    ]);\n\n    const handleCancelAppointment = (id) => {\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n            )\n        );\n    };\n\n    const handleSubmitNote = (id, newNote) => {\n        setAppointments(\n            appointments.map((appointment) =>\n                appointment.id === id\n                    ? { ...appointment, notes: [...appointment.notes, newNote] }\n                    : appointment\n            )\n        );\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments([\n            ...appointments,\n            {\n                id: newId,\n                doctorName: 'Dr. Jane Smith',\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n                isDoctor: false,\n            },\n        ]);\n    };\n\n    // Conditional rendering based on user role\n    const renderDashboard = () => {\n        switch (userRole) {\n            case 'doctor':\n                return (\n                    <DoctorDashboard\n                        appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                        onCancel={handleCancelAppointment}\n                        onSubmitNote={handleSubmitNote}\n                    />\n                );\n            case 'patient':\n                return (\n                    <PatientDashboard\n                        appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                        onCancel={handleCancelAppointment}\n                        onSubmitNote={handleSubmitNote}\n                        onBookAppointment={handleBookAppointment}\n                    />\n                );\n            case 'admin':\n                return <AdminPage />;\n            default:\n                return <p>Please select a valid user role.</p>;\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n            <div>\n                <label htmlFor=\"roleSelect\">Select User Role: </label>\n                <select\n                    id=\"roleSelect\"\n                    value={userRole}\n                    onChange={(e) => setUserRole(e.target.value)}\n                >\n                    <option value=\"doctor\">Doctor</option>\n                    <option value=\"patient\">Patient</option>\n                    <option value=\"admin\">Admin</option>\n                </select>\n            </div>\n            {renderDashboard()}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}