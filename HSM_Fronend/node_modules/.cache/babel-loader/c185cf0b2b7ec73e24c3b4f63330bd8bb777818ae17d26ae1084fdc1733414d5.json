{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/appointments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAppointments(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  const handleCancelAppointment = async id => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to cancel appointment');\n      }\n      const data = await response.json();\n      if (data.success) {\n        setAppointments(appointments.map(appointment => appointment.id === id ? {\n          ...appointment,\n          status: 'Cancelled'\n        } : appointment));\n      } else {\n        console.error('Error cancelling appointment:', data.message);\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  const handleSubmitNote = async (id, newNote) => {\n    console.log(id, newNote);\n    // Logic for submitting note\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments([...appointments, {\n      id: newId,\n      doctor_name: 'Dr. Jane Smith',\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }],\n      isDoctor: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBook: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DoctorDashboard","PatientDashboard","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","fetchAppointments","response","fetch","ok","Error","data","json","console","log","error","handleCancelAppointment","id","method","headers","success","map","appointment","status","message","handleSubmitNote","newNote","handleBookAppointment","newAppointment","newId","length","doctor_name","date","notes","author","text","note","isDoctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","onCancel","onSubmitNote","onBook","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/appointments');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setAppointments(data);\n                console.log(data);\n            } catch (error) {\n                console.error('Error fetching appointments:', error);\n            }\n        };\n\n        fetchAppointments();\n    }, []);\n\n    const handleCancelAppointment = async (id) => {\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to cancel appointment');\n            }\n\n            const data = await response.json();\n\n            if (data.success) {\n                setAppointments(\n                    appointments.map((appointment) =>\n                        appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n                    )\n                );\n            } else {\n                console.error('Error cancelling appointment:', data.message);\n            }\n        } catch (error) {\n            console.error('Error cancelling appointment:', error);\n        }\n    };\n\n    const handleSubmitNote = async (id, newNote) => {\n        console.log(id, newNote);\n        // Logic for submitting note\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments([\n            ...appointments,\n            {\n                id: newId,\n                doctor_name: 'Dr. Jane Smith',\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n                isDoctor: false,\n            },\n        ]);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            <DoctorDashboard\n                appointments={appointments.filter(appointment => appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n            />\n\n            <PatientDashboard\n                appointments={appointments.filter(appointment => !appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n                onBook={handleBookAppointment}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,eAAe,CAACM,IAAI,CAAC;QACrBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDT,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,uBAAuB,GAAG,MAAOC,EAAE,IAAK;IAC1C,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCS,EAAE,SAAS,EAAE;QAC5EC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACnD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACS,OAAO,EAAE;QACdf,eAAe,CACXD,YAAY,CAACiB,GAAG,CAAEC,WAAW,IACzBA,WAAW,CAACL,EAAE,KAAKA,EAAE,GAAG;UAAE,GAAGK,WAAW;UAAEC,MAAM,EAAE;QAAY,CAAC,GAAGD,WACtE,CACJ,CAAC;MACL,CAAC,MAAM;QACHT,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEJ,IAAI,CAACa,OAAO,CAAC;MAChE;IACJ,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAAA,CAAOR,EAAE,EAAES,OAAO,KAAK;IAC5Cb,OAAO,CAACC,GAAG,CAACG,EAAE,EAAES,OAAO,CAAC;IACxB;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAIC,cAAc,IAAK;IAC9C,MAAMC,KAAK,GAAGzB,YAAY,CAAC0B,MAAM,GAAG,CAAC;IACrCzB,eAAe,CAAC,CACZ,GAAGD,YAAY,EACf;MACIa,EAAE,EAAEY,KAAK;MACTE,WAAW,EAAE,gBAAgB;MAC7BC,IAAI,EAAEJ,cAAc,CAACI,IAAI;MACzBT,MAAM,EAAE,WAAW;MACnBU,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE,SAAS;QAAEC,IAAI,EAAEP,cAAc,CAACQ;MAAK,CAAC,CAAC;MACzDC,QAAQ,EAAE;IACd,CAAC,CACJ,CAAC;EACN,CAAC;EAED,oBACIpC,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBtC,OAAA;MAAAsC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnC1C,OAAA,CAACH,eAAe;MACZM,YAAY,EAAEA,YAAY,CAACwC,MAAM,CAACtB,WAAW,IAAIA,WAAW,CAACe,QAAQ,CAAE;MACvEQ,QAAQ,EAAE7B,uBAAwB;MAClC8B,YAAY,EAAErB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEF1C,OAAA,CAACF,gBAAgB;MACbK,YAAY,EAAEA,YAAY,CAACwC,MAAM,CAACtB,WAAW,IAAI,CAACA,WAAW,CAACe,QAAQ,CAAE;MACxEQ,QAAQ,EAAE7B,uBAAwB;MAClC8B,YAAY,EAAErB,gBAAiB;MAC/BsB,MAAM,EAAEpB;IAAsB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACxC,EAAA,CAxFID,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA0FT,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}