{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/AppointmentCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentCard = ({\n  appointment,\n  onCancel,\n  onSubmitNote\n}) => {\n  _s();\n  const [note, setNote] = useState(''); // State to hold the input for the new note\n  const [notes, setNotes] = useState([]); // State to hold all notes for the appointment\n\n  // Initialize notes from appointment prop when it changes\n  useEffect(() => {\n    // If notes are provided, map them correctly\n    if (appointment.notes) {\n      setNotes(appointment.notes.map(note => ({\n        text: note.text,\n        author: note.author\n      })));\n    }\n  }, [appointment.notes]);\n\n  // Handle note input change\n  const handleNoteChange = e => {\n    setNote(e.target.value);\n  };\n\n  // Handle note submission\n  const handleNoteSubmit = () => {\n    if (note.trim() === \"\") return; // Prevent empty note submissions\n\n    const newNote = {\n      text: note,\n      author: appointment.isDoctor ? 'Doctor' : 'Patient' // Set the author based on the role\n    };\n\n    // Update notes in the state\n    const updatedNotes = [...notes, newNote];\n    setNotes(updatedNotes); // Update local state\n    setNote(''); // Clear the input after submission\n\n    // Call the onSubmitNote prop to update the backend\n    onSubmitNote(appointment.id, newNote);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Appointment with: \", appointment.doctor_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", appointment.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", appointment.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-section\",\n      children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [note.author, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), \" \", note.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notes available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a note\",\n      value: note,\n      onChange: handleNoteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointment-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-note\",\n        onClick: handleNoteSubmit,\n        children: \"Submit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-appointment\",\n        onClick: () => onCancel(appointment.id),\n        children: \"Cancel Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(AppointmentCard, \"wzY2NxnJF9yNFVbJ5+BqersUJgQ=\");\n_c = AppointmentCard;\nexport default AppointmentCard;\nvar _c;\n$RefreshReg$(_c, \"AppointmentCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AppointmentCard","appointment","onCancel","onSubmitNote","_s","note","setNote","notes","setNotes","map","text","author","handleNoteChange","e","target","value","handleNoteSubmit","trim","newNote","isDoctor","updatedNotes","id","className","children","doctor_name","fileName","_jsxFileName","lineNumber","columnNumber","date","status","length","index","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/AppointmentCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AppointmentCard = ({ appointment, onCancel, onSubmitNote }) => {\n    const [note, setNote] = useState(''); // State to hold the input for the new note\n    const [notes, setNotes] = useState([]); // State to hold all notes for the appointment\n\n    // Initialize notes from appointment prop when it changes\n    useEffect(() => {\n        // If notes are provided, map them correctly\n        if (appointment.notes) {\n            setNotes(appointment.notes.map(note => ({ text: note.text, author: note.author })));\n        }\n    }, [appointment.notes]);\n\n    // Handle note input change\n    const handleNoteChange = (e) => {\n        setNote(e.target.value);\n    };\n\n    // Handle note submission\n    const handleNoteSubmit = () => {\n        if (note.trim() === \"\") return; // Prevent empty note submissions\n\n        const newNote = {\n            text: note,\n            author: appointment.isDoctor ? 'Doctor' : 'Patient', // Set the author based on the role\n        };\n\n        // Update notes in the state\n        const updatedNotes = [...notes, newNote];\n        setNotes(updatedNotes); // Update local state\n        setNote(''); // Clear the input after submission\n\n        // Call the onSubmitNote prop to update the backend\n        onSubmitNote(appointment.id, newNote);\n    };\n\n    return (\n        <div className=\"appointment-card\">\n            <h3>Appointment with: {appointment.doctor_name}</h3>\n            <p>Date: {appointment.date}</p>\n            <p>Status: {appointment.status}</p>\n\n            {/* Notes section */}\n            <div className=\"notes-section\">\n                {notes.length > 0 ? (\n                    <div>\n                        <h4>Notes:</h4>\n                        {notes.map((note, index) => (\n                            <p key={index}>\n                                <strong>{note.author}:</strong> {note.text}\n                            </p>\n                        ))}\n                    </div>\n                ) : (\n                    <p>No notes available</p>\n                )}\n            </div>\n\n            {/* Input for adding a new note */}\n            <input\n                type=\"text\"\n                placeholder=\"Add a note\"\n                value={note}\n                onChange={handleNoteChange}\n            />\n            <div className=\"appointment-actions\">\n                <button className=\"submit-note\" onClick={handleNoteSubmit}>Submit Note</button>\n                <button className=\"cancel-appointment\" onClick={() => onCancel(appointment.id)}>Cancel Appointment</button>\n            </div>\n        </div>\n    );\n};\n\nexport default AppointmentCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZ;IACA,IAAII,WAAW,CAACM,KAAK,EAAE;MACnBC,QAAQ,CAACP,WAAW,CAACM,KAAK,CAACE,GAAG,CAACJ,IAAI,KAAK;QAAEK,IAAI,EAAEL,IAAI,CAACK,IAAI;QAAEC,MAAM,EAAEN,IAAI,CAACM;MAAO,CAAC,CAAC,CAAC,CAAC;IACvF;EACJ,CAAC,EAAE,CAACV,WAAW,CAACM,KAAK,CAAC,CAAC;;EAEvB;EACA,MAAMK,gBAAgB,GAAIC,CAAC,IAAK;IAC5BP,OAAO,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIX,IAAI,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;;IAEhC,MAAMC,OAAO,GAAG;MACZR,IAAI,EAAEL,IAAI;MACVM,MAAM,EAAEV,WAAW,CAACkB,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAE;IACzD,CAAC;;IAED;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGb,KAAK,EAAEW,OAAO,CAAC;IACxCV,QAAQ,CAACY,YAAY,CAAC,CAAC,CAAC;IACxBd,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEb;IACAH,YAAY,CAACF,WAAW,CAACoB,EAAE,EAAEH,OAAO,CAAC;EACzC,CAAC;EAED,oBACInB,OAAA;IAAKuB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAAwB,QAAA,GAAI,oBAAkB,EAACtB,WAAW,CAACuB,WAAW;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpD7B,OAAA;MAAAwB,QAAA,GAAG,QAAM,EAACtB,WAAW,CAAC4B,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA;MAAAwB,QAAA,GAAG,UAAQ,EAACtB,WAAW,CAAC6B,MAAM;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnC7B,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBhB,KAAK,CAACwB,MAAM,GAAG,CAAC,gBACbhC,OAAA;QAAAwB,QAAA,gBACIxB,OAAA;UAAAwB,QAAA,EAAI;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACdrB,KAAK,CAACE,GAAG,CAAC,CAACJ,IAAI,EAAE2B,KAAK,kBACnBjC,OAAA;UAAAwB,QAAA,gBACIxB,OAAA;YAAAwB,QAAA,GAASlB,IAAI,CAACM,MAAM,EAAC,GAAC;UAAA;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACvB,IAAI,CAACK,IAAI;QAAA,GADtCsB,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,gBAEN7B,OAAA;QAAAwB,QAAA,EAAG;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGN7B,OAAA;MACIkC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBnB,KAAK,EAAEV,IAAK;MACZ8B,QAAQ,EAAEvB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF7B,OAAA;MAAKuB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCxB,OAAA;QAAQuB,SAAS,EAAC,aAAa;QAACc,OAAO,EAAEpB,gBAAiB;QAAAO,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/E7B,OAAA;QAAQuB,SAAS,EAAC,oBAAoB;QAACc,OAAO,EAAEA,CAAA,KAAMlC,QAAQ,CAACD,WAAW,CAACoB,EAAE,CAAE;QAAAE,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1G,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtEIJ,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAwErB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}