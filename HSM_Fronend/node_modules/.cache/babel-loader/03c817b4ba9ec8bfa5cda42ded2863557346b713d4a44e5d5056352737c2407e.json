{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport LoginPage from './components/LoginPage'; // Import the LoginPage\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [userType, setUserType] = useState(null); // 'doctor' or 'patient'\n\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/appointments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAppointments(data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  const handleLogin = type => {\n    setUserType(type);\n  };\n  const handleCancelAppointment = async id => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to cancel appointment');\n      }\n      const data = await response.json();\n      if (data.success) {\n        // Update appointments to set the status of the cancelled appointment\n        setAppointments(appointments.map(appointment => appointment.id === id ? {\n          ...appointment,\n          status: 'Cancelled'\n        } : appointment));\n      } else {\n        console.error('Error cancelling appointment:', data.message);\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  const handleSubmitNote = async (id, newNote) => {\n    try {\n      await axios.post(`http://127.0.0.1:5000/appointments/${id}/add-note`, {\n        note: newNote.text\n      });\n      setAppointments(prevAppointments => prevAppointments.map(appointment => appointment.id === id ? {\n        ...appointment,\n        notes: [...appointment.notes, newNote]\n      } : appointment));\n      return true;\n    } catch (error) {\n      console.error('Error submitting note:', error);\n      return false;\n    }\n  };\n  const handleBookAppointment = newAppointment => {\n    // Your existing book appointment logic...\n  };\n  if (!userType) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), userType === 'doctor' ? /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"zQcYWi9pEHSP7I9Oj7ANVEoB9S4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DoctorDashboard","PatientDashboard","LoginPage","axios","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","userType","setUserType","fetchAppointments","response","fetch","ok","Error","data","json","error","console","handleLogin","type","handleCancelAppointment","id","method","headers","success","map","appointment","status","message","handleSubmitNote","newNote","post","note","text","prevAppointments","notes","handleBookAppointment","newAppointment","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","filter","isDoctor","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport LoginPage from './components/LoginPage'; // Import the LoginPage\nimport axios from 'axios';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n    const [userType, setUserType] = useState(null); // 'doctor' or 'patient'\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/appointments');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setAppointments(data);\n            } catch (error) {\n                console.error('Error fetching appointments:', error);\n            }\n        };\n\n        fetchAppointments();\n    }, []);\n\n    const handleLogin = (type) => {\n        setUserType(type);\n    };\n\n    const handleCancelAppointment = async (id) => {\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/appointments/${id}/cancel`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n    \n            if (!response.ok) {\n                throw new Error('Failed to cancel appointment');\n            }\n    \n            const data = await response.json();\n    \n            if (data.success) {\n                // Update appointments to set the status of the cancelled appointment\n                setAppointments(\n                    appointments.map((appointment) =>\n                        appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n                    )\n                );\n            } else {\n                console.error('Error cancelling appointment:', data.message);\n            }\n        } catch (error) {\n            console.error('Error cancelling appointment:', error);\n        }\n    };\n\n    const handleSubmitNote = async (id, newNote) => {\n        try {\n            await axios.post(`http://127.0.0.1:5000/appointments/${id}/add-note`, { note: newNote.text });\n            setAppointments((prevAppointments) =>\n                prevAppointments.map((appointment) =>\n                    appointment.id === id\n                        ? { ...appointment, notes: [...appointment.notes, newNote] }\n                        : appointment\n                )\n            );\n            return true;\n        } catch (error) {\n            console.error('Error submitting note:', error);\n            return false;\n        }\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        // Your existing book appointment logic...\n    };\n\n    if (!userType) {\n        return <LoginPage onLogin={handleLogin} />;\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            {userType === 'doctor' ? (\n                <DoctorDashboard\n                    appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                    onCancel={handleCancelAppointment}\n                    onSubmitNote={handleSubmitNote}\n                />\n            ) : (\n                <PatientDashboard\n                    appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                    onCancel={handleCancelAppointment}\n                    onSubmitNote={handleSubmitNote}\n                    onBookAppointment={handleBookAppointment}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}