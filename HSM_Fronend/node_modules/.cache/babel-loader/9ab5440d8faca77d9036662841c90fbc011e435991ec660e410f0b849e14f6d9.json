{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/AppointmentCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentCard = ({\n  appointment,\n  onCancel,\n  onSubmitNote\n}) => {\n  _s();\n  const [note, setNote] = useState(''); // Input for new note\n  const [notes, setNotes] = useState(appointment.notes || []); // List of existing notes\n\n  const handleNoteChange = e => {\n    setNote(e.target.value);\n  };\n  const handleNoteSubmit = () => {\n    if (note.trim() === \"\") return;\n    const newNote = {\n      text: note,\n      author: appointment.isDoctor ? 'Doctor' : 'Patient' // Checking who adds the note\n    };\n    setNotes([...notes, newNote]); // Add new note to the list\n    setNote(''); // Clear input after submission\n    onSubmitNote(appointment.id, newNote); // Callback to save note (can later be linked to backend)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Appointment with: \", appointment.doctorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", appointment.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", appointment.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-section\",\n      children: notes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [note.author, \" Note:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), \" \", note.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a note\",\n      value: note,\n      onChange: handleNoteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-note\",\n        onClick: handleNoteSubmit,\n        children: \"Submit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-appointment\",\n        onClick: () => onCancel(appointment.id),\n        children: \"Cancel Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(AppointmentCard, \"vKdBm4rYNUQMfocYb428FGbP1yA=\");\n_c = AppointmentCard;\nexport default AppointmentCard;\nvar _c;\n$RefreshReg$(_c, \"AppointmentCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AppointmentCard","appointment","onCancel","onSubmitNote","_s","note","setNote","notes","setNotes","handleNoteChange","e","target","value","handleNoteSubmit","trim","newNote","text","author","isDoctor","id","className","children","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","date","status","length","map","index","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/AppointmentCard.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AppointmentCard = ({ appointment, onCancel, onSubmitNote }) => {\n    const [note, setNote] = useState(''); // Input for new note\n    const [notes, setNotes] = useState(appointment.notes || []); // List of existing notes\n\n    const handleNoteChange = (e) => {\n        setNote(e.target.value);\n    };\n\n    const handleNoteSubmit = () => {\n        if (note.trim() === \"\") return;\n        const newNote = {\n            text: note,\n            author: appointment.isDoctor ? 'Doctor' : 'Patient', // Checking who adds the note\n        };\n        setNotes([...notes, newNote]); // Add new note to the list\n        setNote(''); // Clear input after submission\n        onSubmitNote(appointment.id, newNote); // Callback to save note (can later be linked to backend)\n    };\n\n    return (\n        <div className=\"appointment-card\">\n            <h3>Appointment with: {appointment.doctorName}</h3>\n            <p>Date: {appointment.date}</p>\n            <p>Status: {appointment.status}</p>\n\n            {/* Display existing notes */}\n            <div className=\"notes-section\">\n                {notes.length > 0 && (\n                    <div>\n                        <h4>Notes:</h4>\n                        {notes.map((note, index) => (\n                            <p key={index}>\n                                <strong>{note.author} Note:</strong> {note.text}\n                            </p>\n                        ))}\n                    </div>\n                )}\n            </div>\n\n            {/* Input for adding a new note */}\n            <input\n                type=\"text\"\n                placeholder=\"Add a note\"\n                value={note}\n                onChange={handleNoteChange}\n            />\n            \n            {/* Button group with proper class names */}\n            <div className=\"button-group\">\n                <button className=\"submit-note\" onClick={handleNoteSubmit}>Submit Note</button>\n                <button className=\"cancel-appointment\" onClick={() => onCancel(appointment.id)}>Cancel Appointment</button>\n            </div>\n        </div>\n    );\n};\n\nexport default AppointmentCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}