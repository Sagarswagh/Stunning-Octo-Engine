{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AppointmentCard from './AppointmentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientDashboard = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [newAppointment, setNewAppointment] = useState({\n    patientName: '',\n    date: ''\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Simulate fetching existing appointments\n    setTimeout(() => {\n      const fetchedAppointments = [{\n        id: 1,\n        patientName: 'John Doe',\n        date: '2024-10-15',\n        status: 'Scheduled'\n      }, {\n        id: 2,\n        patientName: 'Jane Smith',\n        date: '2024-10-16',\n        status: 'Scheduled'\n      }];\n      setAppointments(fetchedAppointments);\n      setLoading(false);\n    }, 1000); // Simulate network delay\n  }, []);\n  const handleAppointmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAppointment({\n      ...newAppointment,\n      [name]: value\n    });\n  };\n  const bookAppointment = () => {\n    if (newAppointment.patientName && newAppointment.date) {\n      const updatedAppointments = [...appointments, {\n        id: appointments.length + 1,\n        ...newAppointment,\n        status: 'Scheduled'\n      }];\n      setAppointments(updatedAppointments);\n      setNewAppointment({\n        patientName: '',\n        date: ''\n      }); // Reset form\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading appointments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments\",\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentCard, {\n        appointment: appointment\n      }, appointment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book New Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"patientName\",\n        placeholder: \"Your Name\",\n        value: newAppointment.patientName,\n        onChange: handleAppointmentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: newAppointment.date,\n        onChange: handleAppointmentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: bookAppointment,\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientDashboard, \"X0xgUPdbnsAT42iyDnfx2uvOr+Q=\");\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","AppointmentCard","jsxDEV","_jsxDEV","PatientDashboard","_s","appointments","setAppointments","newAppointment","setNewAppointment","patientName","date","loading","setLoading","setTimeout","fetchedAppointments","id","status","handleAppointmentChange","e","name","value","target","bookAppointment","updatedAppointments","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","appointment","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AppointmentCard from './AppointmentCard';\n\nconst PatientDashboard = () => {\n    const [appointments, setAppointments] = useState([]);\n    const [newAppointment, setNewAppointment] = useState({ patientName: '', date: '' });\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Simulate fetching existing appointments\n        setTimeout(() => {\n            const fetchedAppointments = [\n                { id: 1, patientName: 'John Doe', date: '2024-10-15', status: 'Scheduled' },\n                { id: 2, patientName: 'Jane Smith', date: '2024-10-16', status: 'Scheduled' },\n            ];\n            setAppointments(fetchedAppointments);\n            setLoading(false);\n        }, 1000); // Simulate network delay\n    }, []);\n\n    const handleAppointmentChange = (e) => {\n        const { name, value } = e.target;\n        setNewAppointment({ ...newAppointment, [name]: value });\n    };\n\n    const bookAppointment = () => {\n        if (newAppointment.patientName && newAppointment.date) {\n            const updatedAppointments = [...appointments, { id: appointments.length + 1, ...newAppointment, status: 'Scheduled' }];\n            setAppointments(updatedAppointments);\n            setNewAppointment({ patientName: '', date: '' }); // Reset form\n        }\n    };\n\n    if (loading) {\n        return <div>Loading appointments...</div>;\n    }\n\n    return (\n        <div className=\"patient-dashboard\">\n            <h1>Patient Dashboard</h1>\n            <h2>Current Appointments</h2>\n            <div className=\"appointments\">\n                {appointments.map((appointment) => (\n                    <AppointmentCard\n                        key={appointment.id}\n                        appointment={appointment}\n                    />\n                ))}\n            </div>\n            <h2>Book New Appointment</h2>\n            <div className=\"booking-form\">\n                <input\n                    type=\"text\"\n                    name=\"patientName\"\n                    placeholder=\"Your Name\"\n                    value={newAppointment.patientName}\n                    onChange={handleAppointmentChange}\n                />\n                <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={newAppointment.date}\n                    onChange={handleAppointmentChange}\n                />\n                <button onClick={bookAppointment}>Book Appointment</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PatientDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}