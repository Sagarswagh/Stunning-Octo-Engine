{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/App.css'; // Adjust path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false); // For Patient signup/login\n  const navigate = useNavigate();\n  const handleUserTypeChange = e => {\n    setUserType(e.target.value);\n  };\n  const handleSignUpToggle = () => {\n    setIsSignUp(!isSignUp);\n  };\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent default form submission\n    try {\n      const url = userType === 'Doctor' ? 'http://127.0.0.1:5000/doctor/login' : isSignUp ? 'http://127.0.0.1:5000/patient/signup' : 'http://127.0.0.1:5000/patient/login';\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to authenticate');\n      }\n\n      // Redirect based on user type\n      if (userType === 'Doctor') {\n        navigate('/doctor-dashboard');\n      } else {\n        navigate('/patient-dashboard');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Doctor\",\n            checked: userType === 'Doctor',\n            onChange: handleUserTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), \"Doctor Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Patient\",\n            checked: userType === 'Patient',\n            onChange: handleUserTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), \"Patient Login/Signup\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), userType === 'Patient' && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSignUpToggle,\n        children: isSignUp ? 'Switch to Login' : 'Switch to Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isSignUp ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"sZzIqtjbfU6eA/vuUWarzROho8o=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","userType","setUserType","username","setUsername","password","setPassword","isSignUp","setIsSignUp","navigate","handleUserTypeChange","e","target","value","handleSignUpToggle","handleLogin","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","checked","onChange","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/App.css';  // Adjust path if necessary\n\nconst Login = () => {\n    const [userType, setUserType] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isSignUp, setIsSignUp] = useState(false); // For Patient signup/login\n    const navigate = useNavigate();\n\n    const handleUserTypeChange = (e) => {\n        setUserType(e.target.value);\n    };\n\n    const handleSignUpToggle = () => {\n        setIsSignUp(!isSignUp);\n    };\n\n    const handleLogin = async (e) => {\n        e.preventDefault(); // Prevent default form submission\n        try {\n            const url = userType === 'Doctor'\n                ? 'http://127.0.0.1:5000/doctor/login'\n                : isSignUp\n                ? 'http://127.0.0.1:5000/patient/signup'\n                : 'http://127.0.0.1:5000/patient/login';\n\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ username, password }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to authenticate');\n            }\n\n            // Redirect based on user type\n            if (userType === 'Doctor') {\n                navigate('/doctor-dashboard');\n            } else {\n                navigate('/patient-dashboard');\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <h1>Login Page</h1>\n            <form onSubmit={handleLogin}>\n                <div className=\"login-options\">\n                    <label>\n                        <input\n                            type=\"radio\"\n                            value=\"Doctor\"\n                            checked={userType === 'Doctor'}\n                            onChange={handleUserTypeChange}\n                        />\n                        Doctor Login\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            value=\"Patient\"\n                            checked={userType === 'Patient'}\n                            onChange={handleUserTypeChange}\n                        />\n                        Patient Login/Signup\n                    </label>\n                </div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n                {userType === 'Patient' && (\n                    <button type=\"button\" onClick={handleSignUpToggle}>\n                        {isSignUp ? 'Switch to Login' : 'Switch to Sign Up'}\n                    </button>\n                )}\n                <button type=\"submit\">{isSignUp ? 'Sign Up' : 'Login'}</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}