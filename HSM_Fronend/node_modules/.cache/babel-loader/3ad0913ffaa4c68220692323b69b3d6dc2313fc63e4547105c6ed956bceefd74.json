{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/LoginPage.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [userType, setUserType] = useState(''); // 'doctor' or 'patient'\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleUserTypeChange = type => {\n    setUserType(type);\n    setUsername('');\n    setPassword('');\n  };\n  const handleLogin = () => {\n    // Handle login logic here (you can replace this with an actual API call)\n    if (userType === 'doctor' && username === 'doctor' && password === 'doctor') {\n      onLogin('doctor'); // Simulating successful login for doctor\n    } else if (userType === 'patient') {\n      // You can implement patient login logic here\n      onLogin('patient'); // Simulating successful login for patient\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUserTypeChange('doctor'),\n      children: \"Login as Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUserTypeChange('patient'),\n      children: \"Login as Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), userType && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userType === 'doctor' ? 'Doctor Login' : 'Patient Login/Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), userType === 'patient' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Patient signup not implemented'),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"D5VFLNoQX/OqjsCmQYUqzvPAISg=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","userType","setUserType","username","setUsername","password","setPassword","handleUserTypeChange","type","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/components/LoginPage.js"],"sourcesContent":["// src/components/LoginPage.js\nimport React, { useState } from 'react';\n\nconst LoginPage = ({ onLogin }) => {\n    const [userType, setUserType] = useState(''); // 'doctor' or 'patient'\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleUserTypeChange = (type) => {\n        setUserType(type);\n        setUsername('');\n        setPassword('');\n    };\n\n    const handleLogin = () => {\n        // Handle login logic here (you can replace this with an actual API call)\n        if (userType === 'doctor' && username === 'doctor' && password === 'doctor') {\n            onLogin('doctor'); // Simulating successful login for doctor\n        } else if (userType === 'patient') {\n            // You can implement patient login logic here\n            onLogin('patient'); // Simulating successful login for patient\n        } else {\n            alert('Invalid credentials');\n        }\n    };\n\n    return (\n        <div className=\"login-page\">\n            <h1>Login</h1>\n            <button onClick={() => handleUserTypeChange('doctor')}>Login as Doctor</button>\n            <button onClick={() => handleUserTypeChange('patient')}>Login as Patient</button>\n\n            {userType && (\n                <div>\n                    <h2>{userType === 'doctor' ? 'Doctor Login' : 'Patient Login/Signup'}</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <button onClick={handleLogin}>Login</button>\n                    {userType === 'patient' && (\n                        <button onClick={() => alert('Patient signup not implemented')}>Sign Up</button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}