{"ast":null,"code":"var _jsxFileName = \"/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      const response = await fetch('http://127.0.0.1:5000/appointments');\n      const data = await response.json();\n      console.log(data); // Log the fetched data\n      setAppointments(data);\n    };\n    fetchAppointments();\n  }, []);\n  const handleCancelAppointment = id => {\n    setAppointments(prevAppointments => prevAppointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      status: 'Cancelled'\n    } : appointment));\n  };\n  const handleSubmitNote = (id, newNote) => {\n    setAppointments(prevAppointments => prevAppointments.map(appointment => appointment.id === id ? {\n      ...appointment,\n      notes: [...appointment.notes, newNote]\n    } : appointment));\n  };\n  const handleBookAppointment = newAppointment => {\n    const newId = appointments.length + 1;\n    setAppointments(prevAppointments => [...prevAppointments, {\n      id: newId,\n      doctor_name: newAppointment.doctorName || 'Dr. Unknown',\n      patient_name: 'Patient Name',\n      // Set the patient name or update the booking logic accordingly\n      date: newAppointment.date,\n      status: 'Scheduled',\n      notes: [{\n        author: 'Patient',\n        text: newAppointment.note\n      }]\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hospital Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n      appointments: appointments.filter(appointment => appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientDashboard, {\n      appointments: appointments.filter(appointment => !appointment.isDoctor),\n      onCancel: handleCancelAppointment,\n      onSubmitNote: handleSubmitNote,\n      onBookAppointment: handleBookAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DoctorDashboard","PatientDashboard","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","fetchAppointments","response","fetch","data","json","console","log","handleCancelAppointment","id","prevAppointments","map","appointment","status","handleSubmitNote","newNote","notes","handleBookAppointment","newAppointment","newId","length","doctor_name","doctorName","patient_name","date","author","text","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","isDoctor","onCancel","onSubmitNote","onBookAppointment","_c","$RefreshReg$"],"sources":["/Users/sagarwagh/Desktop/Final Project/hospital-management-system/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorDashboard from './components/DoctorDashboard';\nimport PatientDashboard from './components/PatientDashboard';\n\nconst App = () => {\n    const [appointments, setAppointments] = useState([]);\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n            const response = await fetch('http://127.0.0.1:5000/appointments');\n            const data = await response.json();\n            console.log(data); // Log the fetched data\n            setAppointments(data);\n        };\n\n        fetchAppointments();\n    }, []);\n\n    const handleCancelAppointment = (id) => {\n        setAppointments((prevAppointments) =>\n            prevAppointments.map((appointment) =>\n                appointment.id === id ? { ...appointment, status: 'Cancelled' } : appointment\n            )\n        );\n    };\n\n    const handleSubmitNote = (id, newNote) => {\n        setAppointments((prevAppointments) =>\n            prevAppointments.map((appointment) =>\n                appointment.id === id\n                    ? { ...appointment, notes: [...appointment.notes, newNote] }\n                    : appointment\n            )\n        );\n    };\n\n    const handleBookAppointment = (newAppointment) => {\n        const newId = appointments.length + 1;\n        setAppointments((prevAppointments) => [\n            ...prevAppointments,\n            {\n                id: newId,\n                doctor_name: newAppointment.doctorName || 'Dr. Unknown',\n                patient_name: 'Patient Name', // Set the patient name or update the booking logic accordingly\n                date: newAppointment.date,\n                status: 'Scheduled',\n                notes: [{ author: 'Patient', text: newAppointment.note }],\n            },\n        ]);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Hospital Management System</h1>\n\n            <DoctorDashboard\n                appointments={appointments.filter((appointment) => appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n            />\n\n            <PatientDashboard\n                appointments={appointments.filter((appointment) => !appointment.isDoctor)}\n                onCancel={handleCancelAppointment}\n                onSubmitNote={handleSubmitNote}\n                onBookAppointment={handleBookAppointment}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;MACnBJ,eAAe,CAACI,IAAI,CAAC;IACzB,CAAC;IAEDH,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,uBAAuB,GAAIC,EAAE,IAAK;IACpCT,eAAe,CAAEU,gBAAgB,IAC7BA,gBAAgB,CAACC,GAAG,CAAEC,WAAW,IAC7BA,WAAW,CAACH,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGG,WAAW;MAAEC,MAAM,EAAE;IAAY,CAAC,GAAGD,WACtE,CACJ,CAAC;EACL,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACL,EAAE,EAAEM,OAAO,KAAK;IACtCf,eAAe,CAAEU,gBAAgB,IAC7BA,gBAAgB,CAACC,GAAG,CAAEC,WAAW,IAC7BA,WAAW,CAACH,EAAE,KAAKA,EAAE,GACf;MAAE,GAAGG,WAAW;MAAEI,KAAK,EAAE,CAAC,GAAGJ,WAAW,CAACI,KAAK,EAAED,OAAO;IAAE,CAAC,GAC1DH,WACV,CACJ,CAAC;EACL,CAAC;EAED,MAAMK,qBAAqB,GAAIC,cAAc,IAAK;IAC9C,MAAMC,KAAK,GAAGpB,YAAY,CAACqB,MAAM,GAAG,CAAC;IACrCpB,eAAe,CAAEU,gBAAgB,IAAK,CAClC,GAAGA,gBAAgB,EACnB;MACID,EAAE,EAAEU,KAAK;MACTE,WAAW,EAAEH,cAAc,CAACI,UAAU,IAAI,aAAa;MACvDC,YAAY,EAAE,cAAc;MAAE;MAC9BC,IAAI,EAAEN,cAAc,CAACM,IAAI;MACzBX,MAAM,EAAE,WAAW;MACnBG,KAAK,EAAE,CAAC;QAAES,MAAM,EAAE,SAAS;QAAEC,IAAI,EAAER,cAAc,CAACS;MAAK,CAAC;IAC5D,CAAC,CACJ,CAAC;EACN,CAAC;EAED,oBACI/B,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBjC,OAAA;MAAAiC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnCrC,OAAA,CAACH,eAAe;MACZM,YAAY,EAAEA,YAAY,CAACmC,MAAM,CAAEtB,WAAW,IAAKA,WAAW,CAACuB,QAAQ,CAAE;MACzEC,QAAQ,EAAE5B,uBAAwB;MAClC6B,YAAY,EAAEvB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEFrC,OAAA,CAACF,gBAAgB;MACbK,YAAY,EAAEA,YAAY,CAACmC,MAAM,CAAEtB,WAAW,IAAK,CAACA,WAAW,CAACuB,QAAQ,CAAE;MAC1EC,QAAQ,EAAE5B,uBAAwB;MAClC6B,YAAY,EAAEvB,gBAAiB;MAC/BwB,iBAAiB,EAAErB;IAAsB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnC,EAAA,CAjEID,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAmET,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}